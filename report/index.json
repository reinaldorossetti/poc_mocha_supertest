{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 10,
    "pending": 0,
    "failures": 2,
    "start": "2023-04-10T15:46:25.467Z",
    "end": "2023-04-10T15:46:30.815Z",
    "duration": 5348,
    "testsRegistered": 12,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a590cb43-17ee-49f7-be92-4e19ac4910c6",
      "title": "",
      "fullFile": "/home/runner/work/poc_mocha_supertest/poc_mocha_supertest/test/features/openweathermap/weatherSearch.test.js",
      "file": "/test/features/openweathermap/weatherSearch.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2964b222-e6f8-4e12-8eb5-b497d061e07b",
          "title": "Feature Checking the weather",
          "fullFile": "/home/runner/work/poc_mocha_supertest/poc_mocha_supertest/test/features/openweathermap/weatherSearch.test.js",
          "file": "/test/features/openweathermap/weatherSearch.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Checking the weather by city",
              "fullTitle": "Feature Checking the weather Checking the weather by city",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?q=Manaus&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.header['content-type']).to.contain('application/json')\nexpect(response.status).to.equal(200);\nexpect(response.text).to.contain('Manaus');",
              "err": {},
              "uuid": "2bf76635-bae3-4141-a3e9-f5fa11f30277",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking the weather by id",
              "fullTitle": "Feature Checking the weather Checking the weather by id",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?id=3448439&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.header['content-type']).to.contain('application/json')\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "edfd217f-aa07-41e0-a279-68c0af6cd208",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking weather by longitude and latitude",
              "fullTitle": "Feature Checking the weather Checking weather by longitude and latitude",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?lat=-23.5475&lon=-46.6361&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "513e8cf7-03d6-49c6-8d45-d8b86377f50e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking weather by zip code",
              "fullTitle": "Feature Checking the weather Checking weather by zip code",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?zip=94040%2Cus&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "14ed8e06-bc00-43f5-a2ac-3464e45356b7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking weather by not found zip code",
              "fullTitle": "Feature Checking the weather Checking weather by not found zip code",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?zip=040%2Cus&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(404)\nexpect(response.body.message).to.equal(\"city not found\")",
              "err": {},
              "uuid": "1f2def53-16ea-46a1-9d86-b486cb232939",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking cities within a rectangle zone",
              "fullTitle": "Feature Checking the weather Checking cities within a rectangle zone",
              "timedOut": null,
              "duration": 324,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(404)\nexpect(response.body.message).to.equal(\"Nothing to geocode\")",
              "err": {
                "message": "AssertionError: expected 400 to equal 404",
                "estack": "AssertionError: expected 400 to equal 404\n    at Context.<anonymous> (test/features/openweathermap/weatherSearch.test.js:46:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 400\n+ 404\n"
              },
              "uuid": "7ac4e57a-9513-448f-ad29-80daa3481461",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking cities in circle",
              "fullTitle": "Feature Checking the weather Checking cities in circle",
              "timedOut": null,
              "duration": 326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5//weather?lat=-23.5475&lon=-46.6361&cnt=10&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)\nexpect(response.body.coord.lon).to.equal(-46.6361)\nexpect(response.body.coord.lat).to.equal(\"-23.5475 \")",
              "err": {
                "message": "AssertionError: expected -23.5475 to equal '-23.5475 '",
                "estack": "AssertionError: expected -23.5475 to equal '-23.5475 '\n    at Context.<anonymous> (test/features/openweathermap/weatherSearch.test.js:55:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aeef197e-d8b9-40be-b834-25d5923d9ea3",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking multilingual support",
              "fullTitle": "Feature Checking the weather Checking multilingual support",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?id=3448439&lang=sp&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)\nexpect(response.body.sys.country).to.contain(\"BR\")\nexpect(response.body.name).to.equal(\"São Paulo\")",
              "err": {},
              "uuid": "ff59ad1f-bcda-4ea8-8f89-8078802ce9df",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking Call back functionfully",
              "fullTitle": "Feature Checking the weather Checking Call back functionfully",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?q=S%C3%A3o+Paulo&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)\nexpect(response.body.name).to.contain(\"São Paulo\")",
              "err": {},
              "uuid": "c5fe441c-a7d5-4af6-be25-409888550678",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking Units of measurement - For temperature in Fahrenheit use units=imperial",
              "fullTitle": "Feature Checking the weather Checking Units of measurement - For temperature in Fahrenheit use units=imperial",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?q=S%C3%A3o+Paulo&units=imperial&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\n  expect(response.status).to.equal(200)\n  expect(response.body.sys.country).to.contain(\"BR\")\n  expect(response.body.name).to.equal(\"São Paulo\")",
              "err": {},
              "uuid": "ce6e37ee-cc0f-48d5-a053-9338c5cd7e1f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking Units of measurement - For temperature in Celsius use units=metric",
              "fullTitle": "Feature Checking the weather Checking Units of measurement - For temperature in Celsius use units=metric",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?q=S%C3%A3o+Paulo&units=metric&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)\nexpect(response.body.sys.country).to.contain(\"BR\")\nexpect(response.body.name).to.equal(\"São Paulo\")",
              "err": {},
              "uuid": "bd7ed4e8-7481-4b24-909c-6a8215f6701c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking Units of measurement - For temperature in Kelvin use units=standard",
              "fullTitle": "Feature Checking the weather Checking Units of measurement - For temperature in Kelvin use units=standard",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(url).get('/data/2.5/weather?q=S%C3%A3o+Paulo&units=standard&appid=e2f1d841cc16cff49a0aa18b531d71e0')\n.set({Accept: 'application/json' })\nexpect(response.status).to.equal(200)\nexpect(response.body.sys.country).to.contain(\"BR\")\nexpect(response.body.name).to.equal(\"São Paulo\")",
              "err": {},
              "uuid": "76444931-fa82-45b5-a1dd-3394054e6d41",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bf76635-bae3-4141-a3e9-f5fa11f30277",
            "edfd217f-aa07-41e0-a279-68c0af6cd208",
            "513e8cf7-03d6-49c6-8d45-d8b86377f50e",
            "14ed8e06-bc00-43f5-a2ac-3464e45356b7",
            "1f2def53-16ea-46a1-9d86-b486cb232939",
            "ff59ad1f-bcda-4ea8-8f89-8078802ce9df",
            "c5fe441c-a7d5-4af6-be25-409888550678",
            "ce6e37ee-cc0f-48d5-a053-9338c5cd7e1f",
            "bd7ed4e8-7481-4b24-909c-6a8215f6701c",
            "76444931-fa82-45b5-a1dd-3394054e6d41"
          ],
          "failures": [
            "7ac4e57a-9513-448f-ad29-80daa3481461",
            "aeef197e-d8b9-40be-b834-25d5923d9ea3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4068,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "json": "true",
        "html": "true",
        "reportDir": "report",
        "reportFilename": "index"
      },
      "version": "6.2.0"
    }
  }
}